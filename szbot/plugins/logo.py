import re
from szbot import sz
from io import BytesIO
from requests import get
from pyrogram import filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
import os 
from PIL import Image, ImageDraw, ImageFont
import random
from szbot.helpers.fsub import ForceSub
from szbot.helpers.database.add_user import AddUserToDatabase
import requests
import shutil


def nospace(s):

    s = re.sub(r"\s+", '%20', s)

    return s
@sz.on_message(filters.command(["logo", f"logo@szimagebot"]))
async def make_logo(_, message):
    await AddUserToDatabase(_, message)
    FSub = await ForceSub(_, message)
    if FSub == 400:
        return
    if len(message.command) < 2:
            return await message.reply_text("Please give a text to make logo")
    m = await message.reply_text("`Creating..`")
    name = message.text.split(None, 1)[1] if len(message.command) < 3 else message.text.split(None, 1)[1].replace(" ", "%20")
    api = get(f"https://api.singledevelopers.net/logo?name={name}")
    await m.edit("`ðŸ“¤ Uploading ...`")
    await sz.send_chat_action(message.chat.id, "upload_photo")
    img = Image.open(BytesIO(api.content))
    murl = requests.get(f"https://single-developers.up.railway.app/logo?search={name}").history[1].url
    imgcaption = f"""
Logo Genarated Successfullyâœ…

à¿‚ **Generated By** : [szrosebot](https://t.me/szrosebot)
à¿‚ **Requestor** :. {message.from_user.mention}
à¿‚ **Powered By **  : [szteambots](https://t.me/szteambots)
à¿‚ **Download link** : `{murl}`
"""
    logoname = "szlogo.png"
    img.save(logoname, "png")
    await message.reply_photo(photo = murl,
                              caption=imgcaption,
                              reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "â€¢â€¢Download Linkâ€¢â€¢", url=f"{murl}"
                    )
                ],
            ]
          ),)
    await m.delete()
    if os.path.exists(logoname):
            os.remove(logoname)
                       
@sz.on_message(filters.command(["logo", f"logo@szimagebot"]))
async def make_logo(_, message):
    await AddUserToDatabase(_, message)
    FSub = await ForceSub(_, message)
    if FSub == 400:
        return
    if len(message.command) < 2:
            return await message.reply_text("Please give a text to make logo")
    m = await message.reply_text("`Creating..`")
    name = message.text.split(None, 1)[1] if len(message.command) < 3 else message.text.split(None, 1)[1].replace(" ", "%20")
    api = get(f"https://api.singledevelopers.net/logo?name={name}")
    await m.edit("`ðŸ“¤ Uploading ...`")
    await sz.send_chat_action(message.chat.id, "upload_photo")
    img = Image.open(BytesIO(api.content))
    murl = requests.get(f"https://single-developers.up.railway.app/logo?search={name}").history[1].url
    imgcaption = f"""
Logohq Genarated Successfullyâœ…
à¿‚ **Generated By** : [szrosebot](https://t.me/szrosebot)
à¿‚ **Requestor** :. {message.from_user.mention}
à¿‚ **Powered By **  : [szteambots](https://t.me/szteambots)
à¿‚ **Download link** : `{murl}`
"""
    logoname = "szlogo.png"
    img.save(logoname, "png")
    await message.reply_photo(photo = murl,
                              caption=imgcaption,
                              reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "â€¢â€¢Download Linkâ€¢â€¢", url=f"{murl}"
                    )
                ],
            ]
          ),)
    await m.delete()
    if os.path.exists(logoname):
            os.remove(logoname)
